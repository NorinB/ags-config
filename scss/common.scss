$hover: transparentize($_widget-bg, ($widget-opacity * 0.9) / 100);
$widget-bg: transparentize($_widget-bg, $widget-opacity / 100);
$active-gradient: linear-gradient($accent-gradient);

$border-color: transparentize($_border-color, $border-opacity / 100);
$border: $border-width solid $border-color;

$text-shadow: 2px 2px 2px $shadow;

$popover-border-color: transparentize($_border-color, max(($border-opacity - 1) / 100, 0));
$popover-radius: if($radii == 0, 0, $radii + $popover-padding);

* { font-size: $font-size }

@mixin unset($rec: false){
    all: unset;

    @if $rec {
        * { all: unset };
    }
}

@mixin widget{
    @include unset;
    transition: $transition;
    border-radius: $radii;
    color: $fg-color;
    background-color: $widget-bg;
    border: $border;
}

@mixin button-focus() {
    box-shadow: inset 0 0 0 $border-width $accent;
    background-color: $hover;
    color: $hover-fg;
}

@mixin button-hover() {
    box-shadow: inset 0 0 0 $border-width $border-color;
    background-color: $hover;
    color: $hover-fg;
}

@mixin button-active() {
    box-shadow: inset 0 0 0 $border-width $border-color;
    background-image: $active-gradient;
    background-color: $accent;
    color: $accent-fg;
}

@mixin button-disabled() {
    box-shadow: none;
    background-color: transparent;
    color: transparentize($fg-color, 0.7);
}

@mixin button($flat: false, $reactive: true, $radii: $radii, $focusable: true){
    @include unset;
    transition: $transition;
    border-radius: $radii;
    color: $fg-color;

    @if $flat{
        background-color: transparent;
        background-image: none;
        box-shadow: none;
    } @else{
        background-color: $widget-bg;
        box-shadow: inset 0 0 0 $border-width $border-color;
    }

    @if $reactive{
        @if $focusable {
            &:focus{
                @include button-focus;
            }
        }

        &:hover{
            @include button-hover;
        }

        &:active, &.on, &.active, &:checked {
            @include button-active;

            &:hover {
                box-shadow: inset 0 0 0 $border-width $border-color,
                            inset 0 0 0 99px $hover;
            }
        }
    }

    &:disabled {
        @include button-disabled;
    }
}

@mixin accs-button($flat: false, $reactive: true){
    @include button($flat: true, $reactive: false, $focusable: false);
    color: $fg-color;

    > * {
        border-radius: $radii;
        transition: $transition;

        @if $flat{
            background-color: transparent;
            box-shadow: none;
        } @else{
            background-color: $widget-bg;
            box-shadow: inset 0 0 0 $border-width $border-color;
        }
    }


    @if $reactive{
        &:focus > *, &.focused > * {
            @include button-focus;
        }

        &:hover > * {
            @include button-hover;
        }

        &:active, &.active, &.on, &:checked {
            > * {
                @include button-active;
            }

            &:hover > * {
                box-shadow: inset 0 0 0 $border-width $border-color,
                            inset 0 0 0 99px $hover;
            }
        }
    }
}

@mixin floating-widget {
    @if $drop-shadow {
        box-shadow: 0 0 min(6px, $spacing/2) 0 $shadow;
    }
    transition: $transition;
    margin: max($spacing, 8px);
    border: $border-width solid $popover-border-color;
    background-color: $bg-color;
    color: $fg-color;
    border-radius: $popover-radius;
    padding: $popover-padding;
}

@mixin slider($width: 0.7em, $slider-width: .5em, $gradient: $active-gradient, $slider: true, $focusable: true, $radii: $radii){
    @include unset($rec: true);

    trough{
        transition: $transition;
        border-radius: $radii;
        border: $border;
        background-color: $widget-bg;
        min-height: $width;
        min-width:  $width;

        highlight, progress{
            border-radius: max($radii - $border-width, 0);
            background-image: $gradient;
            min-height: $width;
            min-width:  $width;
        }
    }

    slider {
        box-shadow: none;
        background-color: transparent;
        border: $border-width solid transparent;
        transition: $transition;
        border-radius: $radii;
        min-height: $width;
        min-width:  $width;
        margin: -$slider-width;
    }

    &:hover {
        trough {
            background-color: $hover;
        }

        slider {
            @if $slider{
                background-color: $fg-color;
                border-color: $border-color;

                @if $drop-shadow {
                    box-shadow: 0 0 3px 0 $shadow;
                }
            }
        }
    }

    &:disabled {
        highlight, progress{
            background-color: transparentize($fg-color, 0.4);
            background-image: none;
        }
    }

    @if $focusable {
        trough:focus{
            background-color: $hover;
            box-shadow: inset 0 0 0 $border-width $accent;

            slider {
                @if $slider {
                    background-color: $fg-color;
                    box-shadow: inset 0 0 0 $border-width $accent;
                }
            }
        }

    }
}

@mixin shader($width: 3em){
    border-radius: max($radii - $border-width, 0);

    label {
        color: $shader-fg;
        text-shadow: $text-shadow;
    }

    @if $color-scheme == 'dark' {
        box-shadow: inset 0 0 $width $width/3 transparentize($bg-color, 0.3);
    }

    @if $color-scheme == 'light' {
        background-color: transparentize($bg-color, 0.8);
    }
}

@mixin text-border{
    text-shadow:
        -1 * $border-width -1 * $border-width 0 $border-color,
        $border-width $border-width 0 $border-color,
        -1 * $border-width $border-width 0 $border-color,
        $border-width -1 * $border-width 0 $border-color;

    -gtk-icon-shadow:
        -1 * $border-width -1 * $border-width 0 $border-color,
        $border-width $border-width 0 $border-color,
        -1 * $border-width $border-width 0 $border-color,
        $border-width -1 * $border-width 0 $border-color;
}

@mixin scrollbar{
    scrollbar, scrollbar * {
        all: unset;
    }

    scrollbar.vertical {
        transition: $transition;
        background-color: transparentize($bg-color, 0.7);

        &:hover {
            background-color: transparentize($bg-color, 0.3);

            slider {
                background-color: transparentize($fg-color, 0.3);
                min-width: .6em;
            }
        }
    }


    scrollbar.vertical slider {
        background-color: transparentize($fg-color, 0.5);
        border-radius: $radii;
        min-width: .4em;
        min-height: 2em;
        transition: $transition;
    }
}

@mixin switch{
    @include button;

    slider {
        background-color: $fg-color;
        border-radius: $radii;
        min-width: 24px;
        min-height: 24px;
    }

    image { color: transparent; }
}

@mixin hidden {
    background-color: transparent;
    background-image: none;
    border-color: transparent;
    box-shadow: none;
    -gtk-icon-transform: scale(0);

    * {
        background-color: transparent;
        background-image: none;
        border-color: transparent;
        box-shadow: none;
        -gtk-icon-transform: scale(0);
    }
}

tooltip {
    * { all: unset; }

    background-color: transparent;
    border: none;

    > * > *{
        background-color: $bg-color;
        border-radius: $radii;
        border: $border-width solid $popover-border-color;
        color: $fg-color;
        padding: 8px;
        margin: 4px;
        box-shadow: 0 0 3px 0 $shadow;
    }
}

window.popup {
    > * {
        border: none;
        box-shadow: none;
    }

    menu {
        border-radius: $popover-radius;
        background-color: $bg-color;
        padding: $popover-padding;
        border: $border-width solid $popover-border-color;

        separator {
            background-color: $border-color;
        }

        menuitem {
            @include button;
            padding: $spacing/2;
            margin: $spacing/2 0;
            &:first-child { margin-top: 0; }
            &:last-child { margin-bottom: 0; }
        }
    }
}
